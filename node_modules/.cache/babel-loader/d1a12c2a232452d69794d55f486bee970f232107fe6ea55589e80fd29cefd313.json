{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yulia\\\\OneDrive - Peter the Great St. Petersburg Polytechnical University\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\bound\\\\OPD_site\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport ProductList from './components/ProductList';\nimport FilterSidebar from './components/FilterSidebar';\nimport Popup from './components/popup';\nimport './App.css';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport CategoryPage from './components/CategoryPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [products, setProducts] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [searchTerm, setSearchTerm] = useState(''); // Добавили state для поиска\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // State для открытия/закрытия popup\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние аутентификации (пример)\n  const [loading, setLoading] = useState(true);\n\n  // Имитация API вызова (замените реальным API)\n  useEffect(() => {\n    const fetchData = async () => {\n      //Здесь нужно использовать реальный адрес API\n      // const response = await fetch('https://example.com/api/products');\n      // const data = await response.json();\n      // setProducts(data);\n\n      // Временные данные для примера\n      const data = [{\n        id: 1,\n        name: 'Диван',\n        price: 50000,\n        image: 'https://via.placeholder.com/150',\n        store: 'Store 1',\n        link: 'https://example.com/product1',\n        category: 'Диваны и кресла'\n      }, {\n        id: 2,\n        name: 'Кресло',\n        price: 25000,\n        image: 'https://via.placeholder.com/150',\n        store: 'Store 2',\n        link: 'https://example.com/product2',\n        category: 'Диваны и кресла'\n      }, {\n        id: 3,\n        name: 'Стол',\n        price: 30000,\n        image: 'https://via.placeholder.com/150',\n        store: 'Store 1',\n        link: 'https://example.com/product3',\n        category: 'Столы и стулья'\n      }, {\n        id: 4,\n        name: 'Диван угловой',\n        price: 70000,\n        image: 'https://via.placeholder.com/150',\n        store: 'Store 3',\n        link: 'https://example.com/product4',\n        category: 'Диваны и кресла'\n      }, {\n        id: 5,\n        name: 'Шкаф',\n        price: 40000,\n        image: 'https://via.placeholder.com/150',\n        store: 'Store 2',\n        link: 'https://example.com/product5',\n        category: 'Шкафы и стеллажи'\n      }, {\n        id: 6,\n        name: 'Кровать',\n        price: 60000,\n        image: 'https://via.placeholder.com/150',\n        store: 'Store 1',\n        link: 'https://example.com/product6',\n        category: 'Кровати и матрасы'\n      }, {\n        id: 7,\n        name: 'Тумбочка',\n        price: 15000,\n        image: 'https://via.placeholder.com/150',\n        store: 'Store 3',\n        link: 'https://example.com/product7',\n        category: 'Тумбы и комоды'\n      }, {\n        id: 8,\n        name: 'Стул',\n        price: 10000,\n        image: 'https://via.placeholder.com/150',\n        store: 'Store 2',\n        link: 'https://example.com/product8',\n        category: 'Столы и стулья'\n      }, {\n        id: 9,\n        name: 'Детская кроватка',\n        price: 35000,\n        image: 'https://via.placeholder.com/150',\n        store: 'Store 1',\n        link: 'https://example.com/product9',\n        category: 'Детская мебель'\n      }, {\n        id: 10,\n        name: 'Комод',\n        price: 28000,\n        image: 'https://via.placeholder.com/150',\n        store: 'Store 3',\n        link: 'https://example.com/product10',\n        category: 'Тумбы и комоды'\n      }];\n      setProducts(data);\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n    //Здесь нужно реализовать отправку фильтров на API\n    //И обновить стейт products на основе результатов\n    console.log('New filters:', newFilters);\n  };\n  const handleSearch = term => {\n    // Добавили обработчик поиска\n    setSearchTerm(term);\n  };\n  const handleOpenPopup = () => {\n    // Функция для открытия всплывающего окна\n    setIsPopupOpen(true);\n  };\n  const handleClosePopup = () => {\n    // Функция для закрытия всплывающего окна\n    setIsPopupOpen(false);\n  };\n\n  // New function to handle login from Popup\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    setIsPopupOpen(false); // close the popup after successful login\n  };\n\n  // New function to handle register from Popup (just close popup as example)\n  const handleRegister = () => {\n    setIsLoggedIn(true);\n    setIsPopupOpen(false); // close the popup after successful register, also login as example\n  };\n  const filteredProducts = products.filter(product => {\n    //Тут нужно реализовать логику фильтрации\n    //Основываясь на filters. Будет работать только если\n    //Имитированный API возвращает данные в правильном формате\n    const searchTermLower = searchTerm.toLowerCase();\n    const productNameLower = product.name.toLowerCase();\n    return productNameLower.includes(searchTermLower); // Фильтруем по названию\n  });\n\n  // Логика для отображения товаров по категории\n  const CategoryPageWithProducts = () => {\n    _s();\n    const {\n      categoryName\n    } = useParams();\n    const filteredProducts = products.filter(product => product.category === categoryName);\n    return /*#__PURE__*/_jsxDEV(ProductList, {\n      products: filteredProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  };\n  // Главная страница с товарами\n  _s(CategoryPageWithProducts, \"MGDD8sTUujKJP+spoqFXIbW1eyA=\", true);\n  const HomePage = () => {\n    return /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onOpenPopup: handleOpenPopup,\n        onSearch: handleSearch,\n        isLoggedIn: isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(ProductList, {\n          products: filteredProducts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/category/:categoryName\",\n            element: /*#__PURE__*/_jsxDEV(CategoryPageWithProducts, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Popup, {\n        isOpen: isPopupOpen,\n        onClose: handleClosePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), \" \", isPopupOpen && /*#__PURE__*/_jsxDEV(Popup, {\n        isOpen: isPopupOpen,\n        onClose: handleClosePopup,\n        onLogin: handleLogin,\n        onRegister: handleRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"kcWky5ZW8nrp5vPUFnUuLCsYTYE=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","ProductList","FilterSidebar","Popup","ReactDOM","BrowserRouter","CategoryPage","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","products","setProducts","filters","setFilters","searchTerm","setSearchTerm","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","loading","setLoading","fetchData","data","id","name","price","image","store","link","category","handleFilterChange","newFilters","console","log","handleSearch","term","handleOpenPopup","handleClosePopup","handleLogin","handleRegister","filteredProducts","filter","product","searchTermLower","toLowerCase","productNameLower","includes","CategoryPageWithProducts","categoryName","useParams","fileName","_jsxFileName","lineNumber","columnNumber","HomePage","children","className","onOpenPopup","onSearch","Routes","Route","path","element","isOpen","onClose","onLogin","onRegister","_c","$RefreshReg$"],"sources":["C:/Users/Yulia/OneDrive - Peter the Great St. Petersburg Polytechnical University/Рабочий стол/bound/OPD_site/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport ProductList from './components/ProductList';\nimport FilterSidebar from './components/FilterSidebar';\nimport Popup from './components/popup';\nimport './App.css';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport CategoryPage from './components/CategoryPage';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [searchTerm, setSearchTerm] = useState(''); // Добавили state для поиска\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // State для открытия/закрытия popup\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние аутентификации (пример)\n  const [loading, setLoading] = useState(true);\n\n  // Имитация API вызова (замените реальным API)\n  useEffect(() => {\n    const fetchData = async () => {\n      //Здесь нужно использовать реальный адрес API\n      // const response = await fetch('https://example.com/api/products');\n      // const data = await response.json();\n      // setProducts(data);\n\n      // Временные данные для примера\n      const data = [\n        { id: 1, name: 'Диван', price: 50000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product1', category: 'Диваны и кресла' },\n        { id: 2, name: 'Кресло', price: 25000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product2', category: 'Диваны и кресла' },\n        { id: 3, name: 'Стол', price: 30000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product3', category: 'Столы и стулья' },\n        { id: 4, name: 'Диван угловой', price: 70000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product4', category: 'Диваны и кресла' },\n        { id: 5, name: 'Шкаф', price: 40000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product5', category: 'Шкафы и стеллажи' },\n        { id: 6, name: 'Кровать', price: 60000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product6', category: 'Кровати и матрасы' },\n        { id: 7, name: 'Тумбочка', price: 15000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product7', category: 'Тумбы и комоды' },\n        { id: 8, name: 'Стул', price: 10000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product8', category: 'Столы и стулья' },\n        { id: 9, name: 'Детская кроватка', price: 35000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product9', category: 'Детская мебель' },\n        { id: 10, name: 'Комод', price: 28000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product10', category: 'Тумбы и комоды' },\n      ];\n      setProducts(data);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleFilterChange = (newFilters) => {\n    setFilters(newFilters);\n    //Здесь нужно реализовать отправку фильтров на API\n    //И обновить стейт products на основе результатов\n    console.log('New filters:', newFilters);\n  };\n\n  const handleSearch = (term) => { // Добавили обработчик поиска\n    setSearchTerm(term);\n  };\n\n  const handleOpenPopup = () => { // Функция для открытия всплывающего окна\n    setIsPopupOpen(true);\n  };\n\n  const handleClosePopup = () => { // Функция для закрытия всплывающего окна\n    setIsPopupOpen(false);\n  };\n\n  // New function to handle login from Popup\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    setIsPopupOpen(false);  // close the popup after successful login\n  };\n\n    // New function to handle register from Popup (just close popup as example)\n  const handleRegister = () => {\n    setIsLoggedIn(true);\n    setIsPopupOpen(false);  // close the popup after successful register, also login as example\n  };\n\n  const filteredProducts = products.filter(product => {\n    //Тут нужно реализовать логику фильтрации\n    //Основываясь на filters. Будет работать только если\n    //Имитированный API возвращает данные в правильном формате\n    const searchTermLower = searchTerm.toLowerCase();\n    const productNameLower = product.name.toLowerCase();\n    return productNameLower.includes(searchTermLower); // Фильтруем по названию\n\n  });\n\n  // Логика для отображения товаров по категории\n  const CategoryPageWithProducts = () => {\n    const { categoryName } = useParams();\n    const filteredProducts = products.filter(product => product.category === categoryName);\n    return <ProductList products={filteredProducts} />;\n  };\n   // Главная страница с товарами\n  const HomePage = () => {\n    return <ProductList products={products} />;\n  };\n\n  return (\n    <BrowserRouter>\n    <div className=\"app-container\">\n      <Header onOpenPopup={handleOpenPopup}\n      onSearch={handleSearch}\n      isLoggedIn={isLoggedIn}\n      /> {/* Передаем функцию в Header */}\n      <div className=\"main-content\">\n        <ProductList products={filteredProducts} />\n        <Routes>\n          {/* Главная страница с полным списком товаров */}\n            <Route path=\"/\" element={loading ? <p>Загрузка...</p> : <HomePage />} />\n            {/* Страница категории товаров */}\n            <Route path=\"/category/:categoryName\" element={<CategoryPageWithProducts />} />\n        </Routes>\n      </div>\n      <Popup isOpen={isPopupOpen} onClose={handleClosePopup} /> {/* Рендерим Popup */}\n      {/* Conditionally render the Popup, passing login handler */}\n      {isPopupOpen && (\n        <Popup isOpen={isPopupOpen} onClose={handleClosePopup} onLogin={handleLogin} onRegister={handleRegister}/>\n      )}\n    </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAM0B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACA;MACA;MACA;;MAEA;MACA,MAAMC,IAAI,GAAG,CACX;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,OAAO;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE,iCAAiC;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,8BAA8B;QAAEC,QAAQ,EAAE;MAAkB,CAAC,EACrK;QAAEN,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE,iCAAiC;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,8BAA8B;QAAEC,QAAQ,EAAE;MAAkB,CAAC,EACtK;QAAEN,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE,iCAAiC;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,8BAA8B;QAAEC,QAAQ,EAAE;MAAiB,CAAC,EACnK;QAAEN,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,eAAe;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE,iCAAiC;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,8BAA8B;QAAEC,QAAQ,EAAE;MAAkB,CAAC,EAC7K;QAAEN,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE,iCAAiC;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,8BAA8B;QAAEC,QAAQ,EAAE;MAAmB,CAAC,EACrK;QAAEN,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE,iCAAiC;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,8BAA8B;QAAEC,QAAQ,EAAE;MAAoB,CAAC,EACzK;QAAEN,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE,iCAAiC;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,8BAA8B;QAAEC,QAAQ,EAAE;MAAiB,CAAC,EACvK;QAAEN,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE,iCAAiC;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,8BAA8B;QAAEC,QAAQ,EAAE;MAAiB,CAAC,EACnK;QAAEN,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,kBAAkB;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE,iCAAiC;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,8BAA8B;QAAEC,QAAQ,EAAE;MAAiB,CAAC,EAC/K;QAAEN,EAAE,EAAE,EAAE;QAAEC,IAAI,EAAE,OAAO;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE,iCAAiC;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,+BAA+B;QAAEC,QAAQ,EAAE;MAAiB,CAAC,CACvK;MACDnB,WAAW,CAACY,IAAI,CAAC;MACjBF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,kBAAkB,GAAIC,UAAU,IAAK;IACzCnB,UAAU,CAACmB,UAAU,CAAC;IACtB;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,UAAU,CAAC;EACzC,CAAC;EAED,MAAMG,YAAY,GAAIC,IAAI,IAAK;IAAE;IAC/BrB,aAAa,CAACqB,IAAI,CAAC;EACrB,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAAE;IAC9BpB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMqB,gBAAgB,GAAGA,CAAA,KAAM;IAAE;IAC/BrB,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;;EAED;EACA,MAAMsB,WAAW,GAAGA,CAAA,KAAM;IACxBpB,aAAa,CAAC,IAAI,CAAC;IACnBF,cAAc,CAAC,KAAK,CAAC,CAAC,CAAE;EAC1B,CAAC;;EAEC;EACF,MAAMuB,cAAc,GAAGA,CAAA,KAAM;IAC3BrB,aAAa,CAAC,IAAI,CAAC;IACnBF,cAAc,CAAC,KAAK,CAAC,CAAC,CAAE;EAC1B,CAAC;EAED,MAAMwB,gBAAgB,GAAG/B,QAAQ,CAACgC,MAAM,CAACC,OAAO,IAAI;IAClD;IACA;IACA;IACA,MAAMC,eAAe,GAAG9B,UAAU,CAAC+B,WAAW,CAAC,CAAC;IAChD,MAAMC,gBAAgB,GAAGH,OAAO,CAAClB,IAAI,CAACoB,WAAW,CAAC,CAAC;IACnD,OAAOC,gBAAgB,CAACC,QAAQ,CAACH,eAAe,CAAC,CAAC,CAAC;EAErD,CAAC,CAAC;;EAEF;EACA,MAAMI,wBAAwB,GAAGA,CAAA,KAAM;IAAAxC,EAAA;IACrC,MAAM;MAAEyC;IAAa,CAAC,GAAGC,SAAS,CAAC,CAAC;IACpC,MAAMT,gBAAgB,GAAG/B,QAAQ,CAACgC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACb,QAAQ,KAAKmB,YAAY,CAAC;IACtF,oBAAO5C,OAAA,CAACP,WAAW;MAACY,QAAQ,EAAE+B;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpD,CAAC;EACA;EAAA9C,EAAA,CALKwC,wBAAwB;EAM9B,MAAMO,QAAQ,GAAGA,CAAA,KAAM;IACrB,oBAAOlD,OAAA,CAACP,WAAW;MAACY,QAAQ,EAAEA;IAAS;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5C,CAAC;EAED,oBACEjD,OAAA,CAACH,aAAa;IAAAsD,QAAA,eACdnD,OAAA;MAAKoD,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5BnD,OAAA,CAACR,MAAM;QAAC6D,WAAW,EAAErB,eAAgB;QACrCsB,QAAQ,EAAExB,YAAa;QACvBjB,UAAU,EAAEA;MAAW;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,KAAC,eACHjD,OAAA;QAAKoD,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3BnD,OAAA,CAACP,WAAW;UAACY,QAAQ,EAAE+B;QAAiB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3CjD,OAAA,CAACuD,MAAM;UAAAJ,QAAA,gBAEHnD,OAAA,CAACwD,KAAK;YAACC,IAAI,EAAC,GAAG;YAACC,OAAO,EAAE3C,OAAO,gBAAGf,OAAA;cAAAmD,QAAA,EAAG;YAAW;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,gBAAGjD,OAAA,CAACkD,QAAQ;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAExEjD,OAAA,CAACwD,KAAK;YAACC,IAAI,EAAC,yBAAyB;YAACC,OAAO,eAAE1D,OAAA,CAAC2C,wBAAwB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNjD,OAAA,CAACL,KAAK;QAACgE,MAAM,EAAEhD,WAAY;QAACiD,OAAO,EAAE3B;MAAiB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,EAEzDtC,WAAW,iBACVX,OAAA,CAACL,KAAK;QAACgE,MAAM,EAAEhD,WAAY;QAACiD,OAAO,EAAE3B,gBAAiB;QAAC4B,OAAO,EAAE3B,WAAY;QAAC4B,UAAU,EAAE3B;MAAe;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAC1G;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEpB;AAAC/C,GAAA,CAhHQD,GAAG;AAAA8D,EAAA,GAAH9D,GAAG;AAgHX;AAED,eAAeA,GAAG;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}