{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yulia\\\\OneDrive - Peter the Great St. Petersburg Polytechnical University\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\bound\\\\OPD_site\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n//import items from './database.js'\n//import { fetchData } from './database.js'; // ИМПОРТ fetchData, а НЕ items\nimport Header from './components/Header';\nimport ProductList from './components/ProductList';\nimport FilterSidebar from './components/FilterSidebar';\nimport Popup from './components/popup';\nimport './App.css';\nimport { BrowserRouter, Route, Routes, useParams } from 'react-router-dom';\nimport CategoryPage from './components/CategoryPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [searchTerm, setSearchTerm] = useState(''); // Добавили state для поиска\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // State для открытия/закрытия popup\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние аутентификации (пример)\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState(null); // State for selected category\n\n  // Имитация API вызова (замените реальным API)\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:5000/api/products');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        // console.log(\"Data from API:\", data); // <---- Добавили console.log\n        // Перемешиваем продукты для случайного порядка\n        const shuffledProducts = shuffleArray(data);\n        setProducts(data);\n      } catch (error) {\n        setError(error);\n        console.error(\"Error fetching data:\", error); // <---- Добавили console.error\n      } finally {\n        setLoading(false);\n      }\n    };\n    // const fetchData = async () => {\n    //   //Здесь нужно использовать реальный адрес API\n    //   // const response = await fetch('https://example.com/api/products');\n    //   // const data = await response.json();\n    //   // setProducts(data);\n\n    //   // Временные данные для примера\n    //   const data = items;\n    //   console.log(items);//[\n    //   //   { id: 1, name: 'Диван', price: 50000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product1', category: 'Диваны и кресла' },\n    //   //   { id: 2, name: 'Кресло', price: 25000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product2', category: 'Диваны и кресла' },\n    //   //   { id: 3, name: 'Стол', price: 30000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product3', category: 'Столы и стулья' },\n    //   //   { id: 4, name: 'Диван угловой', price: 70000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product4', category: 'Диваны и кресла' },\n    //   //   { id: 5, name: 'Шкаф', price: 40000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product5', category: 'Шкафы и стеллажи' },\n    //   //   { id: 6, name: 'Кровать', price: 60000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product6', category: 'Кровати и матрасы' },\n    //   //   { id: 7, name: 'Тумбочка', price: 15000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product7', category: 'Тумбы и комоды' },\n    //   //   { id: 8, name: 'Стул', price: 10000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product8', category: 'Столы и стулья' },\n    //   //   { id: 9, name: 'Детская кроватка', price: 35000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product9', category: 'Детская мебель' },\n    //   //   { id: 10, name: 'Комод', price: 28000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product10', category: 'Тумбы и комоды' },\n    //   // ];\n    //   setProducts(data);\n    //   setLoading(false);\n\n    fetchData();\n  }, []);\n\n  // Функция для перемешивания массива (алгоритм Фишера-Йетса)\n  const shuffleArray = array => {\n    const newArray = [...array];\n    for (let i = newArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n    }\n    return newArray;\n  };\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n    //Здесь нужно реализовать отправку фильтров на API\n    //И обновить стейт products на основе результатов\n    console.log('New filters:', newFilters);\n  };\n  const handleSearch = term => {\n    // Добавили обработчик поиска\n    setSearchTerm(term);\n  };\n  const handleOpenPopup = () => {\n    // Функция для открытия всплывающего окна\n    setIsPopupOpen(true);\n  };\n  const handleClosePopup = () => {\n    // Функция для закрытия всплывающего окна\n    setIsPopupOpen(false);\n  };\n\n  // New function to handle login from Popup\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    setIsPopupOpen(false); // close the popup after successful login\n  };\n\n  // New function to handle register from Popup (just close popup as example)\n  const handleRegister = () => {\n    setIsLoggedIn(true);\n    setIsPopupOpen(false); // close the popup after successful register, also login as example\n  };\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n  };\n  const filteredProducts = products.filter(product => {\n    //Тут нужно реализовать логику фильтрации\n    //Основываясь на filters. Будет работать только если\n    //Имитированный API возвращает данные в правильном формате\n    const searchTermLower = searchTerm.toLowerCase();\n    const productNameLower = product.name.toLowerCase();\n    const searchMatch = productNameLower.includes(searchTermLower); // Фильтруем по названию\n    // Category filter\n    if (selectedCategory) {\n      return product.category === selectedCategory && searchMatch; // Search only within selected category\n    } else {\n      return searchMatch; // Search across all products when no category is selected\n    }\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onOpenPopup: () => setIsPopupOpen(true),\n        onSearch: handleSearch,\n        onFilterChange: handleFilterChange,\n        onCategorySelect: handleCategorySelect,\n        isLoggedIn: isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(ProductList, {\n              products: filteredProducts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/category/:categoryName\",\n            element: /*#__PURE__*/_jsxDEV(CategoryPage, {\n              products: products,\n              searchTerm: searchTerm,\n              loading: loading,\n              error: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(Popup, {\n        isOpen: isPopupOpen,\n        onClose: () => setIsPopupOpen(false),\n        onLogin: () => setIsLoggedIn(true),\n        onRegister: () => setIsLoggedIn(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+gSO2TD8Td0KE+F4cVzIxMnqm9w=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","ProductList","FilterSidebar","Popup","BrowserRouter","Route","Routes","useParams","CategoryPage","jsxDEV","_jsxDEV","App","_s","products","setProducts","filters","setFilters","searchTerm","setSearchTerm","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","error","setError","loading","setLoading","selectedCategory","setSelectedCategory","fetchData","response","fetch","ok","Error","status","data","json","shuffledProducts","shuffleArray","console","array","newArray","i","length","j","Math","floor","random","handleFilterChange","newFilters","log","handleSearch","term","handleOpenPopup","handleClosePopup","handleLogin","handleRegister","handleCategorySelect","category","filteredProducts","filter","product","searchTermLower","toLowerCase","productNameLower","name","searchMatch","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","onOpenPopup","onSearch","onFilterChange","onCategorySelect","path","element","isOpen","onClose","onLogin","onRegister","_c","$RefreshReg$"],"sources":["C:/Users/Yulia/OneDrive - Peter the Great St. Petersburg Polytechnical University/Рабочий стол/bound/OPD_site/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n//import items from './database.js'\r\n//import { fetchData } from './database.js'; // ИМПОРТ fetchData, а НЕ items\r\nimport Header from './components/Header';\r\nimport ProductList from './components/ProductList';\r\nimport FilterSidebar from './components/FilterSidebar';\r\nimport Popup from './components/popup';\r\nimport './App.css';\r\nimport { BrowserRouter, Route, Routes, useParams } from 'react-router-dom';\r\nimport CategoryPage from './components/CategoryPage';\r\n\r\nfunction App() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filters, setFilters] = useState({});\r\n  const [searchTerm, setSearchTerm] = useState(''); // Добавили state для поиска\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // State для открытия/закрытия popup\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние аутентификации (пример)\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedCategory, setSelectedCategory] = useState(null); // State for selected category\r\n  \r\n  // Имитация API вызова (замените реальным API)\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/products');\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        // console.log(\"Data from API:\", data); // <---- Добавили console.log\r\n        // Перемешиваем продукты для случайного порядка\r\n        const shuffledProducts = shuffleArray(data);\r\n        setProducts(data);\r\n      } catch (error) {\r\n        setError(error);\r\n        console.error(\"Error fetching data:\", error); // <---- Добавили console.error\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    // const fetchData = async () => {\r\n    //   //Здесь нужно использовать реальный адрес API\r\n    //   // const response = await fetch('https://example.com/api/products');\r\n    //   // const data = await response.json();\r\n    //   // setProducts(data);\r\n\r\n    //   // Временные данные для примера\r\n    //   const data = items;\r\n    //   console.log(items);//[\r\n    //   //   { id: 1, name: 'Диван', price: 50000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product1', category: 'Диваны и кресла' },\r\n    //   //   { id: 2, name: 'Кресло', price: 25000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product2', category: 'Диваны и кресла' },\r\n    //   //   { id: 3, name: 'Стол', price: 30000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product3', category: 'Столы и стулья' },\r\n    //   //   { id: 4, name: 'Диван угловой', price: 70000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product4', category: 'Диваны и кресла' },\r\n    //   //   { id: 5, name: 'Шкаф', price: 40000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product5', category: 'Шкафы и стеллажи' },\r\n    //   //   { id: 6, name: 'Кровать', price: 60000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product6', category: 'Кровати и матрасы' },\r\n    //   //   { id: 7, name: 'Тумбочка', price: 15000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product7', category: 'Тумбы и комоды' },\r\n    //   //   { id: 8, name: 'Стул', price: 10000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product8', category: 'Столы и стулья' },\r\n    //   //   { id: 9, name: 'Детская кроватка', price: 35000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product9', category: 'Детская мебель' },\r\n    //   //   { id: 10, name: 'Комод', price: 28000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product10', category: 'Тумбы и комоды' },\r\n    //   // ];\r\n    //   setProducts(data);\r\n    //   setLoading(false);\r\n    \r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Функция для перемешивания массива (алгоритм Фишера-Йетса)\r\n  const shuffleArray = (array) => {\r\n    const newArray = [...array];\r\n    for (let i = newArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\r\n    }\r\n    return newArray;\r\n  };\r\n\r\n  const handleFilterChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n    //Здесь нужно реализовать отправку фильтров на API\r\n    //И обновить стейт products на основе результатов\r\n    console.log('New filters:', newFilters);\r\n  };\r\n\r\n  const handleSearch = (term) => { // Добавили обработчик поиска\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  const handleOpenPopup = () => { // Функция для открытия всплывающего окна\r\n    setIsPopupOpen(true);\r\n  };\r\n\r\n  const handleClosePopup = () => { // Функция для закрытия всплывающего окна\r\n    setIsPopupOpen(false);\r\n  };\r\n\r\n  // New function to handle login from Popup\r\n  const handleLogin = () => {\r\n    setIsLoggedIn(true);\r\n    setIsPopupOpen(false);  // close the popup after successful login\r\n  };\r\n\r\n    // New function to handle register from Popup (just close popup as example)\r\n  const handleRegister = () => {\r\n    setIsLoggedIn(true);\r\n    setIsPopupOpen(false);  // close the popup after successful register, also login as example\r\n  };\r\n\r\n  const handleCategorySelect = (category) => {\r\n    setSelectedCategory(category);\r\n  };\r\n\r\nconst filteredProducts = products.filter(product => {\r\n  //Тут нужно реализовать логику фильтрации\r\n  //Основываясь на filters. Будет работать только если\r\n  //Имитированный API возвращает данные в правильном формате\r\n  const searchTermLower = searchTerm.toLowerCase();\r\n  const productNameLower = product.name.toLowerCase();\r\n  const searchMatch = productNameLower.includes(searchTermLower); // Фильтруем по названию\r\n  // Category filter\r\n  if (selectedCategory) {\r\n    return product.category === selectedCategory && searchMatch; // Search only within selected category\r\n  } else {\r\n    return searchMatch; // Search across all products when no category is selected\r\n  }\r\n  });\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  \r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"app-container\">\r\n      <Header\r\n        onOpenPopup={() => setIsPopupOpen(true)}\r\n        onSearch={handleSearch}\r\n        onFilterChange={handleFilterChange}\r\n        onCategorySelect={handleCategorySelect}\r\n        isLoggedIn={isLoggedIn}\r\n      /> {/* Передаем функцию в Header */}\r\n      <div className=\"main-content\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<ProductList products={filteredProducts} />} />\r\n          <Route \r\n            path=\"/category/:categoryName\" \r\n            element={\r\n              <CategoryPage \r\n                products={products} \r\n                searchTerm={searchTerm} \r\n                loading={loading}\r\n                error={error}\r\n              />\r\n            } \r\n          />\r\n          {/* <Route path=\"/category/:categoryName\" element={<CategoryPage />} /> */}\r\n        </Routes>\r\n      </div>\r\n\r\n      {isPopupOpen && (\r\n        <Popup isOpen={isPopupOpen}\r\n          onClose={() => setIsPopupOpen(false)}\r\n          onLogin={() => setIsLoggedIn(true)}\r\n          onRegister={() => setIsLoggedIn(true)}\r\n        />\r\n      )}\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n\r\n};\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}