{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yulia\\\\OneDrive - Peter the Great St. Petersburg Polytechnical University\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\bound\\\\OPD_site\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport ProductList from './components/ProductList';\n//import FilterSidebar from './components/FilterSidebar';\nimport Popup from './components/popup';\nimport './App.css';\nimport { BrowserRouter, Route, Routes, useParams, useNavigate } from 'react-router-dom';\nimport CategoryPage from './components/CategoryPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppContent() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [searchTerm, setSearchTerm] = useState(''); // Добавили state для поиска\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // State для открытия/закрытия popup\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние аутентификации (пример)\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Имитация API вызова (замените реальным API)\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:5000/api/products');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        // Перемешиваем продукты для случайного порядка\n        setProducts(shuffleArray(data)); // Исправлено: сохраняем shuffledProducts\n        // Перенаправляем на главную только если мы уже не на категории\n        if (!window.location.pathname.includes('/category')) {\n          navigate('/', {\n            replace: true\n          });\n        }\n      } catch (error) {\n        setError(error);\n        console.error(\"Error fetching data:\", error); // <---- Добавили console.error\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [navigate]);\n\n  // Функция для перемешивания массива (алгоритм Фишера-Йетса)\n  const shuffleArray = array => {\n    const newArray = [...array];\n    for (let i = newArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n    }\n    return newArray;\n  };\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n    //Здесь нужно реализовать отправку фильтров на API\n    //И обновить стейт products на основе результатов\n    console.log('New filters:', newFilters);\n  };\n  const handleSearch = term => {\n    // Добавили обработчик поиска\n    setSearchTerm(term);\n  };\n  const handleOpenPopup = () => {\n    // Функция для открытия всплывающего окна\n    setIsPopupOpen(true);\n  };\n  const handleClosePopup = () => {\n    // Функция для закрытия всплывающего окна\n    setIsPopupOpen(false);\n  };\n\n  // New function to handle login from Popup\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    setIsPopupOpen(false); // close the popup after successful login\n  };\n\n  // New function to handle register from Popup (just close popup as example)\n  const handleRegister = () => {\n    setIsLoggedIn(true);\n    setIsPopupOpen(false); // close the popup after successful register, also login as example\n  };\n\n  // const handleCategorySelect = (category) => {\n  //   navigate(`/category/${category}`);\n  // };\n\n  const filteredProducts = products.filter(product => {\n    return product.name.toLowerCase().includes(searchTerm.toLowerCase());\n    // const searchTermLower = searchTerm.toLowerCase();\n    // const productNameLower = product.name.toLowerCase();\n    // const searchMatch = productNameLower.includes(searchTermLower); // Фильтруем по названию\n    // // Category filter\n    // if (selectedCategory) {\n    //   return product.category === selectedCategory && searchMatch; // Search only within selected category\n    // } else {\n    //   return searchMatch; // Search across all products when no category is selected\n    // }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onOpenPopup: () => setIsPopupOpen(true),\n      onSearch: handleSearch,\n      onFilterChange: handleFilterChange,\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProductList, {\n            products: filteredProducts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/category/:categoryName\",\n          element: /*#__PURE__*/_jsxDEV(CategoryPage, {\n            products: products,\n            searchTerm: searchTerm,\n            loading: loading,\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(Popup, {\n      isOpen: isPopupOpen,\n      onClose: () => setIsPopupOpen(false),\n      onLogin: () => setIsLoggedIn(true),\n      onRegister: () => setIsLoggedIn(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(AppContent, \"I8OHjtYH/cu/kule/CepYkF//9E=\", false, function () {\n  return [useNavigate];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","ProductList","Popup","BrowserRouter","Route","Routes","useParams","useNavigate","CategoryPage","jsxDEV","_jsxDEV","AppContent","_s","products","setProducts","filters","setFilters","searchTerm","setSearchTerm","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","error","setError","loading","setLoading","navigate","fetchData","response","fetch","ok","Error","status","data","json","shuffleArray","window","location","pathname","includes","replace","console","array","newArray","i","length","j","Math","floor","random","handleFilterChange","newFilters","log","handleSearch","term","handleOpenPopup","handleClosePopup","handleLogin","handleRegister","filteredProducts","filter","product","name","toLowerCase","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","onOpenPopup","onSearch","onFilterChange","path","element","isOpen","onClose","onLogin","onRegister","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/Yulia/OneDrive - Peter the Great St. Petersburg Polytechnical University/Рабочий стол/bound/OPD_site/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './components/Header';\r\nimport ProductList from './components/ProductList';\r\n//import FilterSidebar from './components/FilterSidebar';\r\nimport Popup from './components/popup';\r\nimport './App.css';\r\nimport { BrowserRouter, Route, Routes, useParams, useNavigate  } from 'react-router-dom';\r\nimport CategoryPage from './components/CategoryPage';\r\n\r\nfunction AppContent() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filters, setFilters] = useState({});\r\n  const [searchTerm, setSearchTerm] = useState(''); // Добавили state для поиска\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // State для открытия/закрытия popup\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние аутентификации (пример)\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n\r\n  // Имитация API вызова (замените реальным API)\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/products');\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        // Перемешиваем продукты для случайного порядка\r\n        setProducts(shuffleArray(data)); // Исправлено: сохраняем shuffledProducts\r\n        // Перенаправляем на главную только если мы уже не на категории\r\n        if (!window.location.pathname.includes('/category')) {\r\n          navigate('/', { replace: true });\r\n        }\r\n      } catch (error) {\r\n        setError(error);\r\n        console.error(\"Error fetching data:\", error); // <---- Добавили console.error\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [navigate]);\r\n\r\n  // Функция для перемешивания массива (алгоритм Фишера-Йетса)\r\n  const shuffleArray = (array) => {\r\n    const newArray = [...array];\r\n    for (let i = newArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\r\n    }\r\n    return newArray;\r\n  };\r\n\r\n  const handleFilterChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n    //Здесь нужно реализовать отправку фильтров на API\r\n    //И обновить стейт products на основе результатов\r\n    console.log('New filters:', newFilters);\r\n  };\r\n\r\n  const handleSearch = (term) => { // Добавили обработчик поиска\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  const handleOpenPopup = () => { // Функция для открытия всплывающего окна\r\n    setIsPopupOpen(true);\r\n  };\r\n\r\n  const handleClosePopup = () => { // Функция для закрытия всплывающего окна\r\n    setIsPopupOpen(false);\r\n  };\r\n\r\n  // New function to handle login from Popup\r\n  const handleLogin = () => {\r\n    setIsLoggedIn(true);\r\n    setIsPopupOpen(false);  // close the popup after successful login\r\n  };\r\n\r\n    // New function to handle register from Popup (just close popup as example)\r\n  const handleRegister = () => {\r\n    setIsLoggedIn(true);\r\n    setIsPopupOpen(false);  // close the popup after successful register, also login as example\r\n  };\r\n\r\n  // const handleCategorySelect = (category) => {\r\n  //   navigate(`/category/${category}`);\r\n  // };\r\n\r\nconst filteredProducts = products.filter(product => {\r\n  return product.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n  // const searchTermLower = searchTerm.toLowerCase();\r\n  // const productNameLower = product.name.toLowerCase();\r\n  // const searchMatch = productNameLower.includes(searchTermLower); // Фильтруем по названию\r\n  // // Category filter\r\n  // if (selectedCategory) {\r\n  //   return product.category === selectedCategory && searchMatch; // Search only within selected category\r\n  // } else {\r\n  //   return searchMatch; // Search across all products when no category is selected\r\n  // }\r\n  });\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error)return <div>Error: {error.message}</div>;\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Header\r\n        onOpenPopup={() => setIsPopupOpen(true)}\r\n        onSearch={handleSearch}\r\n        onFilterChange={handleFilterChange}\r\n        isLoggedIn={isLoggedIn}\r\n      />\r\n      <div className=\"main-content\">\r\n        <Routes>\r\n          <Route path=\"/\" element={            \r\n            <ProductList products={filteredProducts} />\r\n            } />\r\n          <Route \r\n            path=\"/category/:categoryName\" \r\n            element={\r\n              <CategoryPage \r\n                products={products} \r\n                searchTerm={searchTerm} \r\n                loading={loading}\r\n                error={error}\r\n              />\r\n            } \r\n          />\r\n          {/* <Route path=\"/category/:categoryName\" element={<CategoryPage />} /> */}\r\n        </Routes>\r\n      </div>\r\n\r\n      {isPopupOpen && (\r\n        <Popup\r\n          isOpen={isPopupOpen}\r\n          onClose={() => setIsPopupOpen(false)}\r\n          onLogin={() => setIsLoggedIn(true)}\r\n          onRegister={() => setIsLoggedIn(true)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <AppContent />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}