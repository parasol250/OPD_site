{"ast":null,"code":"import React,{useState,useEffect}from'react';import Header from'./components/Header';import ProductList from'./components/ProductList';import FilterSidebar from'./components/FilterSidebar';import Popup from'./components/popup';import'./App.css';import ReactDOM from'react-dom/client';import{BrowserRouter}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[products,setProducts]=useState([]);const[filters,setFilters]=useState({});const[searchTerm,setSearchTerm]=useState('');// Добавили state для поиска\nconst[isPopupOpen,setIsPopupOpen]=useState(false);// State для открытия/закрытия popup\nconst[isLoggedIn,setIsLoggedIn]=useState(false);// Состояние аутентификации (пример)\n// Имитация API вызова (замените реальным API)\nuseEffect(()=>{const fetchData=async()=>{//Здесь нужно использовать реальный адрес API\n// const response = await fetch('https://example.com/api/products');\n// const data = await response.json();\n// setProducts(data);\n// Временные данные для примера\nconst data=[{id:1,name:'Диван',price:50000,image:'https://via.placeholder.com/150',store:'Store 1',link:'https://example.com/product1'},{id:2,name:'Кресло',price:25000,image:'https://via.placeholder.com/150',store:'Store 2',link:'https://example.com/product2'},{id:3,name:'Стол',price:30000,image:'https://via.placeholder.com/150',store:'Store 1',link:'https://example.com/product3'},{id:4,name:'Диван угловой',price:70000,image:'https://via.placeholder.com/150',store:'Store 3',link:'https://example.com/product4'}];setProducts(data);};fetchData();},[]);const handleFilterChange=newFilters=>{setFilters(newFilters);//Здесь нужно реализовать отправку фильтров на API\n//И обновить стейт products на основе результатов\nconsole.log('New filters:',newFilters);};const handleSearch=term=>{// Добавили обработчик поиска\nsetSearchTerm(term);};const handleOpenPopup=()=>{// Функция для открытия всплывающего окна\nsetIsPopupOpen(true);};const handleClosePopup=()=>{// Функция для закрытия всплывающего окна\nsetIsPopupOpen(false);};// New function to handle login from Popup\nconst handleLogin=()=>{setIsLoggedIn(true);setIsPopupOpen(false);// close the popup after successful login\n};// New function to handle register from Popup (just close popup as example)\nconst handleRegister=()=>{setIsLoggedIn(true);setIsPopupOpen(false);// close the popup after successful register, also login as example\n};const filteredProducts=products.filter(product=>{//Тут нужно реализовать логику фильтрации\n//Основываясь на filters. Будет работать только если\n//Имитированный API возвращает данные в правильном формате\nconst searchTermLower=searchTerm.toLowerCase();const productNameLower=product.name.toLowerCase();return productNameLower.includes(searchTermLower);// Фильтруем по названию\n});return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(Header,{onOpenPopup:handleOpenPopup,onSearch:handleSearch,isLoggedIn:isLoggedIn}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"main-content\",children:/*#__PURE__*/_jsx(ProductList,{products:filteredProducts})}),/*#__PURE__*/_jsx(Popup,{isOpen:isPopupOpen,onClose:handleClosePopup}),\" \",isPopupOpen&&/*#__PURE__*/_jsx(Popup,{isOpen:isPopupOpen,onClose:handleClosePopup,onLogin:handleLogin,onRegister:handleRegister})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Header","ProductList","FilterSidebar","Popup","ReactDOM","BrowserRouter","jsx","_jsx","jsxs","_jsxs","App","products","setProducts","filters","setFilters","searchTerm","setSearchTerm","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","fetchData","data","id","name","price","image","store","link","handleFilterChange","newFilters","console","log","handleSearch","term","handleOpenPopup","handleClosePopup","handleLogin","handleRegister","filteredProducts","filter","product","searchTermLower","toLowerCase","productNameLower","includes","children","className","onOpenPopup","onSearch","isOpen","onClose","onLogin","onRegister"],"sources":["C:/Users/Yulia/OneDrive - Peter the Great St. Petersburg Polytechnical University/Рабочий стол/bound/OPD_site/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport ProductList from './components/ProductList';\nimport FilterSidebar from './components/FilterSidebar';\nimport Popup from './components/popup';\nimport './App.css';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [searchTerm, setSearchTerm] = useState(''); // Добавили state для поиска\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // State для открытия/закрытия popup\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние аутентификации (пример)\n\n  // Имитация API вызова (замените реальным API)\n  useEffect(() => {\n    const fetchData = async () => {\n      //Здесь нужно использовать реальный адрес API\n      // const response = await fetch('https://example.com/api/products');\n      // const data = await response.json();\n      // setProducts(data);\n\n      // Временные данные для примера\n      const data = [\n        { id: 1, name: 'Диван', price: 50000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product1' },\n        { id: 2, name: 'Кресло', price: 25000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product2' },\n        { id: 3, name: 'Стол', price: 30000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product3' },\n        { id: 4, name: 'Диван угловой', price: 70000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product4' },\n      ];\n      setProducts(data);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleFilterChange = (newFilters) => {\n    setFilters(newFilters);\n    //Здесь нужно реализовать отправку фильтров на API\n    //И обновить стейт products на основе результатов\n    console.log('New filters:', newFilters);\n  };\n\n  const handleSearch = (term) => { // Добавили обработчик поиска\n    setSearchTerm(term);\n  };\n\n  const handleOpenPopup = () => { // Функция для открытия всплывающего окна\n    setIsPopupOpen(true);\n  };\n\n  const handleClosePopup = () => { // Функция для закрытия всплывающего окна\n    setIsPopupOpen(false);\n  };\n\n  // New function to handle login from Popup\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    setIsPopupOpen(false);  // close the popup after successful login\n  };\n\n    // New function to handle register from Popup (just close popup as example)\n  const handleRegister = () => {\n    setIsLoggedIn(true);\n    setIsPopupOpen(false);  // close the popup after successful register, also login as example\n  };\n\n  const filteredProducts = products.filter(product => {\n    //Тут нужно реализовать логику фильтрации\n    //Основываясь на filters. Будет работать только если\n    //Имитированный API возвращает данные в правильном формате\n    const searchTermLower = searchTerm.toLowerCase();\n    const productNameLower = product.name.toLowerCase();\n    return productNameLower.includes(searchTermLower); // Фильтруем по названию\n\n  });\n\n  return (\n    <BrowserRouter>\n    <div className=\"app-container\">\n      <Header onOpenPopup={handleOpenPopup}\n      onSearch={handleSearch}\n      isLoggedIn={isLoggedIn}\n      /> {/* Передаем функцию в Header */}\n      <div className=\"main-content\">\n        \n        <ProductList products={filteredProducts} />\n      </div>\n      <Popup isOpen={isPopupOpen} onClose={handleClosePopup} /> {/* Рендерим Popup */}\n      {/* Conditionally render the Popup, passing login handler */}\n      {isPopupOpen && (\n        <Popup isOpen={isPopupOpen} onClose={handleClosePopup} onLogin={handleLogin} onRegister={handleRegister}/>\n      )}\n    </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}