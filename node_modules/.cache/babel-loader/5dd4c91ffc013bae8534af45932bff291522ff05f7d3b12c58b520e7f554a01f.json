{"ast":null,"code":"// popup.js\nimport{useState}from'react';import React from'react';import'./popup.css';// Импортируем стили\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Popup(_ref){let{isOpen,onClose,onLogin,onRegister}=_ref;const[isLogin,setIsLogin]=useState(true);// State для переключения между входом и регистрацией\nconst[username,setUsername]=useState('');const[password,setPassword]=useState('');const toggleForm=()=>{setIsLogin(!isLogin);};const handleLoginSubmit=e=>{e.preventDefault();// Validate username and password (example validation)\nif(username==='user'&&password==='password'){onLogin();// call login function passed from parent\n}else{alert('Invalid credentials');}};const handleRegisterSubmit=e=>{e.preventDefault();onRegister();// call register function passed from parent\n};if(!isOpen){return null;// Ничего не отображать, если всплывающее окно закрыто\n}return/*#__PURE__*/_jsx(\"div\",{className:\"popup\",children:/*#__PURE__*/_jsx(\"div\",{className:\"popup-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-body\",children:[/*#__PURE__*/_jsx(\"h2\",{children:isLogin?'Вход в аккаунт':'Регистрация'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>e.preventDefault(),children:[\" \",isLogin&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u041B\\u043E\\u0433\\u0438\\u043D\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:password,onChange:e=>setPassword(e.target.value)})]}),!isLogin&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:isLogin?'Войти':'Зарегистрироваться'})]}),/*#__PURE__*/_jsx(\"p\",{onClick:toggleForm,className:\"toggle-form\",children:isLogin?'Нет аккаунта? Зарегистрироваться':'Уже есть аккаунт? Войти'}),/*#__PURE__*/_jsx(\"div\",{className:\"popup-close\",onClick:onClose,children:\"\\u2716\"})]})})});}export default Popup;","map":{"version":3,"names":["useState","React","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Popup","_ref","isOpen","onClose","onLogin","onRegister","isLogin","setIsLogin","username","setUsername","password","setPassword","toggleForm","handleLoginSubmit","e","preventDefault","alert","handleRegisterSubmit","className","children","onSubmit","type","placeholder","value","onChange","target","onClick"],"sources":["C:/Users/Yulia/OneDrive - Peter the Great St. Petersburg Polytechnical University/Рабочий стол/bound/OPD_site/src/components/popup.js"],"sourcesContent":["// popup.js\r\nimport { useState } from 'react';\r\nimport React from 'react';\r\nimport './popup.css'; // Импортируем стили\r\n\r\nfunction Popup({ isOpen, onClose, onLogin, onRegister }) {\r\n  const [isLogin, setIsLogin] = useState(true); // State для переключения между входом и регистрацией\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const toggleForm = () => {\r\n    setIsLogin(!isLogin);\r\n  };\r\n  \r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Validate username and password (example validation)\r\n    if (username === 'user' && password === 'password') {\r\n      onLogin();  // call login function passed from parent\r\n    } else {\r\n      alert('Invalid credentials');\r\n    }\r\n  };\r\n\r\n    const handleRegisterSubmit = (e) => {\r\n    e.preventDefault();\r\n     onRegister(); // call register function passed from parent\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return null; // Ничего не отображать, если всплывающее окно закрыто\r\n  }\r\n\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-container\">\r\n        <div className=\"popup-body\">\r\n        <h2>{isLogin ? 'Вход в аккаунт' : 'Регистрация'}</h2>\r\n          <form onSubmit={(e) => e.preventDefault()}> {/* Предотвращаем перезагрузку */}\r\n            {isLogin && (\r\n              <>\r\n                <input type=\"text\" placeholder=\"Логин\" />\r\n                <input type=\"password\" placeholder=\"Пароль\" value={password}\r\n          onChange={(e) => setPassword(e.target.value)}/>\r\n              </>\r\n            )}\r\n            {!isLogin && (\r\n              <>\r\n                <input type=\"text\" placeholder=\"Email\" />\r\n                <input type=\"text\" placeholder=\"Имя пользователя\" />\r\n                <input type=\"password\" placeholder=\"Пароль\" />\r\n                <input type=\"password\" placeholder=\"Подтвердите пароль\" />\r\n              </>\r\n            )}\r\n            <button type=\"submit\">{isLogin ? 'Войти' : 'Зарегистрироваться'}</button>\r\n          </form>\r\n\r\n          <p onClick={toggleForm} className=\"toggle-form\">\r\n            {isLogin ? 'Нет аккаунта? Зарегистрироваться' : 'Уже есть аккаунт? Войти'}\r\n          </p>\r\n\r\n          <div className=\"popup-close\" onClick={onClose}>&#10006;</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Popup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}