{"ast":null,"code":"// popup.js\nimport{useState}from'react';import React from'react';import'./popup.css';import checkCredentials from'./Login';import CryptoJS from'crypto-js';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function hashString(str){return CryptoJS.SHA256(str).toString();}function Popup(_ref){let{isOpen,onClose,onLogin,onRegister}=_ref;const[isLogin,setIsLogin]=useState(true);const[username,setUsername]=useState('');const[password,setPassword]=useState('');// Keep raw password in state\nconst[error,setError]=useState('');const toggleForm=()=>{setIsLogin(!isLogin);setError('');};const handleLoginSubmit=async e=>{e.preventDefault();setError('');if(!username||!password){setError('Пожалуйста, введите логин и пароль');return;}try{// Hash the password before sending\nconst hashedPassword=hashString(password);const isValid=await checkCredentials(username,hashedPassword);if(isValid){onLogin();// call login function passed from parent\nonClose();// close the popup after successful login\n}else{setError('Неверные учетные данные');}}catch(err){setError('Ошибка при проверке учетных данных');console.error('Login error:',err);}};const registerUser=async(username,password_hash)=>{const response=await fetch('http://localhost:5000/api/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password_hash})});return await response.json();};const handleRegisterSubmit=async e=>{e.preventDefault();setError('');if(!username||!password){setError('Пожалуйста, введите логин и пароль');return;}try{// Hash the password before registration\nconst hashedPassword=hashString(password);await registerUser(username,hashedPassword);await onRegister();onClose();}catch(err){setError('Ошибка при регистрации');console.error('Registration error:',err);}};if(!isOpen){return null;}return/*#__PURE__*/_jsx(\"div\",{className:\"popup\",children:/*#__PURE__*/_jsx(\"div\",{className:\"popup-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-body\",children:[/*#__PURE__*/_jsx(\"h2\",{children:isLogin?'Вход в аккаунт':'Регистрация'}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:isLogin?handleLoginSubmit:handleRegisterSubmit,children:[isLogin?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u041B\\u043E\\u0433\\u0438\\u043D\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:password,onChange:e=>setPassword(e.target.value)})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u041B\\u043E\\u0433\\u0438\\u043D\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",onChange:e=>{if(e.target.value!==password){setError('Пароли не совпадают');}else{setError('');}}})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!!error,children:isLogin?'Войти':'Зарегистрироваться'})]}),/*#__PURE__*/_jsx(\"p\",{onClick:toggleForm,className:\"toggle-form\",children:isLogin?'Нет аккаунта? Зарегистрироваться':'Уже есть аккаунт? Войти'}),/*#__PURE__*/_jsx(\"div\",{className:\"popup-close\",onClick:onClose,children:\"\\u2716\"})]})})});}console.log(hashString('Cheese'));export default Popup;","map":{"version":3,"names":["useState","React","checkCredentials","CryptoJS","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","hashString","str","SHA256","toString","Popup","_ref","isOpen","onClose","onLogin","onRegister","isLogin","setIsLogin","username","setUsername","password","setPassword","error","setError","toggleForm","handleLoginSubmit","e","preventDefault","hashedPassword","isValid","err","console","registerUser","password_hash","response","fetch","method","headers","body","JSON","stringify","json","handleRegisterSubmit","className","children","onSubmit","type","placeholder","value","onChange","target","disabled","onClick","log"],"sources":["C:/Users/Yulia/OneDrive - Peter the Great St. Petersburg Polytechnical University/Рабочий стол/bound/OPD_site/src/components/popup.js"],"sourcesContent":["// popup.js\r\nimport { useState } from 'react';\r\nimport React from 'react';\r\nimport './popup.css';\r\nimport checkCredentials from './Login';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nfunction hashString(str) {\r\n  return CryptoJS.SHA256(str).toString();\r\n}\r\n\r\nfunction Popup({ isOpen, onClose, onLogin, onRegister }) {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState(''); // Keep raw password in state\r\n  const [error, setError] = useState('');\r\n\r\n  const toggleForm = () => {\r\n    setIsLogin(!isLogin);\r\n    setError('');\r\n  };\r\n  \r\n  const handleLoginSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    if (!username || !password) {\r\n      setError('Пожалуйста, введите логин и пароль');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Hash the password before sending\r\n      const hashedPassword = hashString(password);\r\n      const isValid = await checkCredentials(username, hashedPassword);\r\n      \r\n      if (isValid) {\r\n        onLogin();  // call login function passed from parent\r\n        onClose();   // close the popup after successful login\r\n      } else {\r\n        setError('Неверные учетные данные');\r\n      }\r\n    } catch (err) {\r\n      setError('Ошибка при проверке учетных данных');\r\n      console.error('Login error:', err);\r\n    }\r\n  };\r\n\r\n  const registerUser = async (username, password_hash) => {\r\n    const response = await fetch('http://localhost:5000/api/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password_hash }),\r\n    });\r\n    return await response.json();\r\n  };\r\n\r\n  const handleRegisterSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    if (!username || !password) {\r\n      setError('Пожалуйста, введите логин и пароль');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Hash the password before registration\r\n      const hashedPassword = hashString(password);\r\n      await registerUser(username, hashedPassword)\r\n      await onRegister();\r\n      onClose();\r\n    } catch (err) {\r\n      setError('Ошибка при регистрации');\r\n      console.error('Registration error:', err);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-container\">\r\n        <div className=\"popup-body\">\r\n          <h2>{isLogin ? 'Вход в аккаунт' : 'Регистрация'}</h2>\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          <form onSubmit={isLogin ? handleLoginSubmit : handleRegisterSubmit}>\r\n            {isLogin ? (\r\n              <>\r\n                <input \r\n                  type=\"text\" \r\n                  placeholder=\"Логин\" \r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <input \r\n                  type=\"password\" \r\n                  placeholder=\"Пароль\" \r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input \r\n                  type=\"text\" \r\n                  placeholder=\"Логин\" \r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <input \r\n                  type=\"password\" \r\n                  placeholder=\"Пароль\" \r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <input \r\n                  type=\"password\" \r\n                  placeholder=\"Подтвердите пароль\" \r\n                  onChange={(e) => {\r\n                    if (e.target.value !== password) {\r\n                      setError('Пароли не совпадают');\r\n                    } else {\r\n                      setError('');\r\n                    }\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <button type=\"submit\" disabled={!!error}>\r\n              {isLogin ? 'Войти' : 'Зарегистрироваться'}\r\n            </button>\r\n          </form>\r\n\r\n          <p onClick={toggleForm} className=\"toggle-form\">\r\n            {isLogin ? 'Нет аккаунта? Зарегистрироваться' : 'Уже есть аккаунт? Войти'}\r\n          </p>\r\n\r\n          <div className=\"popup-close\" onClick={onClose}>&#10006;</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconsole.log(hashString('Cheese'))\r\n\r\nexport default Popup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}