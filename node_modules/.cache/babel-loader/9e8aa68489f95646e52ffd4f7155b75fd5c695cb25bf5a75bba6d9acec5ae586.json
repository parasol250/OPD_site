{"ast":null,"code":"// popup.js\nimport{useState}from'react';import'./popup.css';import{checkCredentials,hashString,checkUsernameExists,registerUser}from'./Login';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Popup(_ref){let{isOpen,onClose,onLogin,onRegister}=_ref;const[isLogin,setIsLogin]=useState(true);const[username,setUsername]=useState('');const[password,setPassword]=useState('');// Keep raw password in state\nconst[error,setError]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const toggleForm=()=>{setIsLogin(!isLogin);setError('');setPassword('');setConfirmPassword('');};const handleLoginSubmit=async e=>{e.preventDefault();setError('');if(!username||!password){setError('Пожалуйста, введите логин и пароль');return;}try{// Hash the password before sending\nconst hashedPassword=hashString(password);const isValid=await checkCredentials(username,hashedPassword);if(isValid){onLogin(username);// call login function passed from parent\nonClose();// close the popup after successful login\n}else{setError('Неверные учетные данные');}}catch(err){setError('Ошибка при проверке учетных данных');console.error('Login error:',err);}};const handleRegisterSubmit=async e=>{e.preventDefault();setError('');if(!username||!password||!confirmPassword){setError('Пожалуйста, заполните все поля');return;}if(password!==confirmPassword){setError('Пароли не совпадают');return;}try{const usernameExists=await checkUsernameExists(username);if(usernameExists){setError('Ошибка! Пользователь с таким логином уже существует');return;}const hashedPassword=hashString(password);const registrationResult=await registerUser(username,hashedPassword,'user');if(registrationResult.success){await onRegister();onClose();}else{setError(registrationResult.message||'Ошибка при регистрации');}}catch(err){setError(err.message||'Ошибка при регистрации');console.error('Registration error:',err);}};if(!isOpen){return null;}return/*#__PURE__*/_jsx(\"div\",{className:\"popup\",children:/*#__PURE__*/_jsx(\"div\",{className:\"popup-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-body\",children:[/*#__PURE__*/_jsx(\"h2\",{children:isLogin?'Вход в аккаунт':'Регистрация'}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:isLogin?handleLoginSubmit:handleRegisterSubmit,children:[isLogin?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u041B\\u043E\\u0433\\u0438\\u043D\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:password,onChange:e=>setPassword(e.target.value)})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u041B\\u043E\\u0433\\u0438\\u043D\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:confirmPassword,onChange:e=>{setConfirmPassword(e.target.value);if(e.target.value!==password){setError('Пароли не совпадают');}else{setError('');}}})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:isLogin?'Войти':'Зарегистрироваться'})]}),/*#__PURE__*/_jsx(\"p\",{onClick:toggleForm,className:\"toggle-form\",children:isLogin?'Нет аккаунта? Зарегистрироваться':'Уже есть аккаунт? Войти'}),/*#__PURE__*/_jsx(\"div\",{className:\"popup-close\",onClick:onClose,children:\"\\u2716\"})]})})});}console.log(hashString('Cheese'));export default Popup;","map":{"version":3,"names":["useState","checkCredentials","hashString","checkUsernameExists","registerUser","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Popup","_ref","isOpen","onClose","onLogin","onRegister","isLogin","setIsLogin","username","setUsername","password","setPassword","error","setError","confirmPassword","setConfirmPassword","toggleForm","handleLoginSubmit","e","preventDefault","hashedPassword","isValid","err","console","handleRegisterSubmit","usernameExists","registrationResult","success","message","className","children","onSubmit","type","placeholder","value","onChange","target","onClick","log"],"sources":["C:/Users/Yulia/OneDrive - Peter the Great St. Petersburg Polytechnical University/Рабочий стол/bound/OPD_site/src/components/popup.js"],"sourcesContent":["// popup.js\r\nimport { useState } from 'react';\r\nimport './popup.css';\r\nimport {checkCredentials,\r\n  hashString,\r\n  checkUsernameExists,\r\n  registerUser,\r\n} from './Login';\r\n\r\nfunction Popup({ isOpen, onClose, onLogin, onRegister }) {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState(''); // Keep raw password in state\r\n  const [error, setError] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const toggleForm = () => {\r\n    setIsLogin(!isLogin);\r\n    setError('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n  };\r\n  \r\n  const handleLoginSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    if (!username || !password) {\r\n      setError('Пожалуйста, введите логин и пароль');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Hash the password before sending\r\n      const hashedPassword = hashString(password);\r\n      const isValid = await checkCredentials(username, hashedPassword);\r\n      \r\n      if (isValid) {\r\n        onLogin(username);  // call login function passed from parent\r\n        onClose();   // close the popup after successful login\r\n      } else {\r\n        setError('Неверные учетные данные');\r\n      }\r\n    } catch (err) {\r\n      setError('Ошибка при проверке учетных данных');\r\n      console.error('Login error:', err);\r\n    }\r\n  };\r\n\r\n  const handleRegisterSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    if (!username || !password || !confirmPassword) {\r\n      setError('Пожалуйста, заполните все поля');\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError('Пароли не совпадают');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const usernameExists = await checkUsernameExists(username);\r\n      if (usernameExists) {\r\n        setError('Ошибка! Пользователь с таким логином уже существует');\r\n        return;\r\n      }\r\n\r\n      const hashedPassword = hashString(password);\r\n      const registrationResult = await registerUser(username, hashedPassword, 'user');\r\n      \r\n      if (registrationResult.success) {\r\n        await onRegister();\r\n        onClose();\r\n      } else {\r\n        setError(registrationResult.message || 'Ошибка при регистрации');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || 'Ошибка при регистрации');\r\n      console.error('Registration error:', err);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-container\">\r\n        <div className=\"popup-body\">\r\n          <h2>{isLogin ? 'Вход в аккаунт' : 'Регистрация'}</h2>\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          <form onSubmit={isLogin ? handleLoginSubmit : handleRegisterSubmit}>\r\n            {isLogin ? (\r\n              <>\r\n                <input \r\n                  type=\"text\" \r\n                  placeholder=\"Логин\" \r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <input \r\n                  type=\"password\" \r\n                  placeholder=\"Пароль\" \r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input \r\n                  type=\"text\" \r\n                  placeholder=\"Логин\" \r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <input \r\n                  type=\"password\" \r\n                  placeholder=\"Пароль\" \r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <input \r\n                  type=\"password\" \r\n                  placeholder=\"Подтвердите пароль\" \r\n                  value={confirmPassword}\r\n                  onChange={(e) => {\r\n                    setConfirmPassword(e.target.value);\r\n                    if (e.target.value !== password) {\r\n                      setError('Пароли не совпадают');\r\n                    } else {\r\n                      setError('');\r\n                    }\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <button type=\"submit\">\r\n              {isLogin ? 'Войти' : 'Зарегистрироваться'}\r\n            </button>\r\n          </form>\r\n\r\n          <p onClick={toggleForm} className=\"toggle-form\">\r\n            {isLogin ? 'Нет аккаунта? Зарегистрироваться' : 'Уже есть аккаунт? Войти'}\r\n          </p>\r\n\r\n          <div className=\"popup-close\" onClick={onClose}>&#10006;</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconsole.log(hashString('Cheese'))\r\n\r\nexport default Popup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}