{"ast":null,"code":"import React,{useState,useEffect}from'react';import Header from'./components/Header';import ProductList from'./components/ProductList';import FilterSidebar from'./components/FilterSidebar';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[products,setProducts]=useState([]);const[filters,setFilters]=useState({});const[searchTerm,setSearchTerm]=useState('');// Добавили state для поиска\n// Имитация API вызова (замените реальным API)\nuseEffect(()=>{const fetchData=async()=>{//Здесь нужно использовать реальный адрес API\n// const response = await fetch('https://example.com/api/products');\n// const data = await response.json();\n// setProducts(data);\n// Временные данные для примера\nconst data=[{id:1,name:'Диван',price:50000,image:'https://via.placeholder.com/150',store:'Store 1',link:'https://example.com/product1'},{id:2,name:'Кресло',price:25000,image:'https://via.placeholder.com/150',store:'Store 2',link:'https://example.com/product2'},{id:3,name:'Стол',price:30000,image:'https://via.placeholder.com/150',store:'Store 1',link:'https://example.com/product3'},{id:4,name:'Диван угловой',price:70000,image:'https://via.placeholder.com/150',store:'Store 3',link:'https://example.com/product4'}];setProducts(data);};fetchData();},[]);const handleFilterChange=newFilters=>{setFilters(newFilters);//Здесь нужно реализовать отправку фильтров на API\n//И обновить стейт products на основе результатов\nconsole.log('New filters:',newFilters);};const handleSearch=term=>{// Добавили обработчик поиска\nsetSearchTerm(term);};const filteredProducts=products.filter(product=>{//Тут нужно реализовать логику фильтрации\n//Основываясь на filters. Будет работать только если\n//Имитированный API возвращает данные в правильном формате\nconst searchTermLower=searchTerm.toLowerCase();const productNameLower=product.name.toLowerCase();return productNameLower.includes(searchTermLower);// Фильтруем по названию\n});return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(Header,{onSearch:handleSearch}),\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(FilterSidebar,{onFilterChange:handleFilterChange}),/*#__PURE__*/_jsx(ProductList,{products:filteredProducts})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Header","ProductList","FilterSidebar","jsx","_jsx","jsxs","_jsxs","App","products","setProducts","filters","setFilters","searchTerm","setSearchTerm","fetchData","data","id","name","price","image","store","link","handleFilterChange","newFilters","console","log","handleSearch","term","filteredProducts","filter","product","searchTermLower","toLowerCase","productNameLower","includes","className","children","onSearch","onFilterChange"],"sources":["C:/Users/Yulia/OneDrive - Peter the Great St. Petersburg Polytechnical University/Рабочий стол/bound/OPD_site/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport ProductList from './components/ProductList';\nimport FilterSidebar from './components/FilterSidebar';\nimport './App.css';\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [searchTerm, setSearchTerm] = useState(''); // Добавили state для поиска\n\n  // Имитация API вызова (замените реальным API)\n  useEffect(() => {\n    const fetchData = async () => {\n      //Здесь нужно использовать реальный адрес API\n      // const response = await fetch('https://example.com/api/products');\n      // const data = await response.json();\n      // setProducts(data);\n\n      // Временные данные для примера\n      const data = [\n        { id: 1, name: 'Диван', price: 50000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product1' },\n        { id: 2, name: 'Кресло', price: 25000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product2' },\n        { id: 3, name: 'Стол', price: 30000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product3' },\n        { id: 4, name: 'Диван угловой', price: 70000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product4' },\n      ];\n      setProducts(data);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleFilterChange = (newFilters) => {\n    setFilters(newFilters);\n    //Здесь нужно реализовать отправку фильтров на API\n    //И обновить стейт products на основе результатов\n    console.log('New filters:', newFilters);\n  };\n\n  const handleSearch = (term) => { // Добавили обработчик поиска\n    setSearchTerm(term);\n  };\n\n  const filteredProducts = products.filter(product => {\n    //Тут нужно реализовать логику фильтрации\n    //Основываясь на filters. Будет работать только если\n    //Имитированный API возвращает данные в правильном формате\n    const searchTermLower = searchTerm.toLowerCase();\n    const productNameLower = product.name.toLowerCase();\n    return productNameLower.includes(searchTermLower); // Фильтруем по названию\n\n  });\n\n  return (\n    <div className=\"app-container\">\n      <Header onSearch={handleSearch} /> {/* Передаем функцию в Header */}\n      <div className=\"main-content\">\n        <FilterSidebar onFilterChange={handleFilterChange} />\n        <ProductList products={filteredProducts} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}