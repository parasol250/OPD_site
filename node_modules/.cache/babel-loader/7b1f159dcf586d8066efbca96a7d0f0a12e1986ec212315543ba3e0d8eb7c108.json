{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yulia\\\\OneDrive - Peter the Great St. Petersburg Polytechnical University\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\bound\\\\OPD_site\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport items from './database.js';\nimport Header from './components/Header';\nimport ProductList from './components/ProductList';\nimport FilterSidebar from './components/FilterSidebar';\nimport Popup from './components/popup';\nimport './App.css';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, Route, Routes, useParams } from 'react-router-dom';\nimport CategoryPage from './components/CategoryPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  const [products, setProducts] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [searchTerm, setSearchTerm] = useState(''); // Добавили state для поиска\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // State для открытия/закрытия popup\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние аутентификации (пример)\n  const [loading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState(null); // State for selected category\n\n  // Имитация API вызова (замените реальным API)\n  useEffect(() => {\n    const fetchData = async () => {\n      //Здесь нужно использовать реальный адрес API\n      // const response = await fetch('https://example.com/api/products');\n      // const data = await response.json();\n      // setProducts(data);\n\n      // Временные данные для примера\n      const data = items; //[\n      //   { id: 1, name: 'Диван', price: 50000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product1', category: 'Диваны и кресла' },\n      //   { id: 2, name: 'Кресло', price: 25000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product2', category: 'Диваны и кресла' },\n      //   { id: 3, name: 'Стол', price: 30000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product3', category: 'Столы и стулья' },\n      //   { id: 4, name: 'Диван угловой', price: 70000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product4', category: 'Диваны и кресла' },\n      //   { id: 5, name: 'Шкаф', price: 40000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product5', category: 'Шкафы и стеллажи' },\n      //   { id: 6, name: 'Кровать', price: 60000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product6', category: 'Кровати и матрасы' },\n      //   { id: 7, name: 'Тумбочка', price: 15000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product7', category: 'Тумбы и комоды' },\n      //   { id: 8, name: 'Стул', price: 10000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product8', category: 'Столы и стулья' },\n      //   { id: 9, name: 'Детская кроватка', price: 35000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product9', category: 'Детская мебель' },\n      //   { id: 10, name: 'Комод', price: 28000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product10', category: 'Тумбы и комоды' },\n      // ];\n      setProducts(data);\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n    //Здесь нужно реализовать отправку фильтров на API\n    //И обновить стейт products на основе результатов\n    console.log('New filters:', newFilters);\n  };\n  const handleSearch = term => {\n    // Добавили обработчик поиска\n    setSearchTerm(term);\n  };\n  const handleOpenPopup = () => {\n    // Функция для открытия всплывающего окна\n    setIsPopupOpen(true);\n  };\n  const handleClosePopup = () => {\n    // Функция для закрытия всплывающего окна\n    setIsPopupOpen(false);\n  };\n\n  // New function to handle login from Popup\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    setIsPopupOpen(false); // close the popup after successful login\n  };\n\n  // New function to handle register from Popup (just close popup as example)\n  const handleRegister = () => {\n    setIsLoggedIn(true);\n    setIsPopupOpen(false); // close the popup after successful register, also login as example\n  };\n  setTimeout(() => {\n    var _s = $RefreshSig$();\n    const filteredProducts = products.filter(product => {\n      //Тут нужно реализовать логику фильтрации\n      //Основываясь на filters. Будет работать только если\n      //Имитированный API возвращает данные в правильном формате\n      const searchTermLower = searchTerm.toLowerCase();\n      const productNameLower = product.name.toLowerCase();\n      const searchMatch = productNameLower.includes(searchTermLower); // Фильтруем по названию\n      // Category filter\n      if (selectedCategory) {\n        return product.category === selectedCategory && searchMatch; // Search only within selected category\n      } else {\n        return searchMatch; // Search across all products when no category is selected\n      }\n    });\n    const handleCategoryClick = category => {\n      setSelectedCategory(category); // Set selected category\n    };\n    const CategoryPage = () => {\n      _s();\n      const {\n        categoryName\n      } = useParams();\n      const categoryFilteredProducts = products.filter(product => {\n        const searchTermLower = searchTerm.toLowerCase();\n        const productNameLower = product.name.toLowerCase();\n        const searchMatch = productNameLower.includes(searchTermLower);\n        return product.category === categoryName && searchMatch;\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F: \", categoryName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), categoryFilteredProducts.length > 0 ? /*#__PURE__*/_jsxDEV(ProductList, {\n          products: categoryFilteredProducts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u0435\\u0442 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u0432 \\u0434\\u0430\\u043D\\u043D\\u043E\\u0439 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this);\n    };\n    _s(CategoryPage, \"MGDD8sTUujKJP+spoqFXIbW1eyA=\", false, function () {\n      return [useParams];\n    });\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onOpenPopup: handleOpenPopup,\n          onSearch: handleSearch,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(ProductList, {\n                products: filteredProducts\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/category/:categoryName\",\n              element: /*#__PURE__*/_jsxDEV(CategoryPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(Popup, {\n          isOpen: isPopupOpen,\n          onClose: handleClosePopup,\n          onLogin: handleLogin,\n          onRegister: handleRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this);\n  }, 1000);\n}\n_s2(App, \"DHVOGuVqCyByeJfXyuemrqVhjTU=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","items","Header","ProductList","FilterSidebar","Popup","ReactDOM","BrowserRouter","Route","Routes","useParams","CategoryPage","jsxDEV","_jsxDEV","App","_s2","products","setProducts","filters","setFilters","searchTerm","setSearchTerm","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","loading","setLoading","selectedCategory","setSelectedCategory","fetchData","data","handleFilterChange","newFilters","console","log","handleSearch","term","handleOpenPopup","handleClosePopup","handleLogin","handleRegister","setTimeout","_s","$RefreshSig$","filteredProducts","filter","product","searchTermLower","toLowerCase","productNameLower","name","searchMatch","includes","category","handleCategoryClick","categoryName","categoryFilteredProducts","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","onOpenPopup","onSearch","path","element","isOpen","onClose","onLogin","onRegister","_c","$RefreshReg$"],"sources":["C:/Users/Yulia/OneDrive - Peter the Great St. Petersburg Polytechnical University/Рабочий стол/bound/OPD_site/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport items from './database.js'\r\nimport Header from './components/Header';\r\nimport ProductList from './components/ProductList';\r\nimport FilterSidebar from './components/FilterSidebar';\r\nimport Popup from './components/popup';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter, Route, Routes, useParams } from 'react-router-dom';\r\nimport CategoryPage from './components/CategoryPage';\r\n\r\nfunction App() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filters, setFilters] = useState({});\r\n  const [searchTerm, setSearchTerm] = useState(''); // Добавили state для поиска\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // State для открытия/закрытия popup\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние аутентификации (пример)\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedCategory, setSelectedCategory] = useState(null); // State for selected category\r\n\r\n  // Имитация API вызова (замените реальным API)\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      //Здесь нужно использовать реальный адрес API\r\n      // const response = await fetch('https://example.com/api/products');\r\n      // const data = await response.json();\r\n      // setProducts(data);\r\n\r\n      // Временные данные для примера\r\n      const data = items;//[\r\n      //   { id: 1, name: 'Диван', price: 50000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product1', category: 'Диваны и кресла' },\r\n      //   { id: 2, name: 'Кресло', price: 25000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product2', category: 'Диваны и кресла' },\r\n      //   { id: 3, name: 'Стол', price: 30000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product3', category: 'Столы и стулья' },\r\n      //   { id: 4, name: 'Диван угловой', price: 70000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product4', category: 'Диваны и кресла' },\r\n      //   { id: 5, name: 'Шкаф', price: 40000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product5', category: 'Шкафы и стеллажи' },\r\n      //   { id: 6, name: 'Кровать', price: 60000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product6', category: 'Кровати и матрасы' },\r\n      //   { id: 7, name: 'Тумбочка', price: 15000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product7', category: 'Тумбы и комоды' },\r\n      //   { id: 8, name: 'Стул', price: 10000, image: 'https://via.placeholder.com/150', store: 'Store 2', link: 'https://example.com/product8', category: 'Столы и стулья' },\r\n      //   { id: 9, name: 'Детская кроватка', price: 35000, image: 'https://via.placeholder.com/150', store: 'Store 1', link: 'https://example.com/product9', category: 'Детская мебель' },\r\n      //   { id: 10, name: 'Комод', price: 28000, image: 'https://via.placeholder.com/150', store: 'Store 3', link: 'https://example.com/product10', category: 'Тумбы и комоды' },\r\n      // ];\r\n      setProducts(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleFilterChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n    //Здесь нужно реализовать отправку фильтров на API\r\n    //И обновить стейт products на основе результатов\r\n    console.log('New filters:', newFilters);\r\n  };\r\n\r\n  const handleSearch = (term) => { // Добавили обработчик поиска\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  const handleOpenPopup = () => { // Функция для открытия всплывающего окна\r\n    setIsPopupOpen(true);\r\n  };\r\n\r\n  const handleClosePopup = () => { // Функция для закрытия всплывающего окна\r\n    setIsPopupOpen(false);\r\n  };\r\n\r\n  // New function to handle login from Popup\r\n  const handleLogin = () => {\r\n    setIsLoggedIn(true);\r\n    setIsPopupOpen(false);  // close the popup after successful login\r\n  };\r\n\r\n    // New function to handle register from Popup (just close popup as example)\r\n  const handleRegister = () => {\r\n    setIsLoggedIn(true);\r\n    setIsPopupOpen(false);  // close the popup after successful register, also login as example\r\n  };\r\nsetTimeout(()=>{\r\n  const filteredProducts = products.filter(product => {\r\n    //Тут нужно реализовать логику фильтрации\r\n    //Основываясь на filters. Будет работать только если\r\n    //Имитированный API возвращает данные в правильном формате\r\n    const searchTermLower = searchTerm.toLowerCase();\r\n    const productNameLower = product.name.toLowerCase();\r\n    const searchMatch = productNameLower.includes(searchTermLower); // Фильтруем по названию\r\n    // Category filter\r\n    if (selectedCategory) {\r\n      return product.category === selectedCategory && searchMatch; // Search only within selected category\r\n    } else {\r\n      return searchMatch; // Search across all products when no category is selected\r\n    }\r\n  });\r\n\r\n  const handleCategoryClick = (category) => {\r\n    setSelectedCategory(category); // Set selected category\r\n  };\r\n\r\n  const CategoryPage = () => {\r\n    const { categoryName } = useParams();\r\n\r\n    const categoryFilteredProducts = products.filter(product => {\r\n      const searchTermLower = searchTerm.toLowerCase();\r\n      const productNameLower = product.name.toLowerCase();\r\n      const searchMatch = productNameLower.includes(searchTermLower);\r\n\r\n      return product.category === categoryName && searchMatch;\r\n    });\r\n    \r\n    return (\r\n      <div>\r\n        <h2>Категория: {categoryName}</h2>\r\n        {categoryFilteredProducts.length > 0 ? (\r\n          <ProductList products={categoryFilteredProducts} />\r\n        ) : (\r\n          <p>Нет товаров в данной категории.</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"app-container\">\r\n      <Header\r\n      onOpenPopup={handleOpenPopup}\r\n      onSearch={handleSearch}\r\n      isLoggedIn={isLoggedIn}\r\n      /> {/* Передаем функцию в Header */}\r\n      <div className=\"main-content\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<ProductList products={filteredProducts} />} />\r\n          <Route path=\"/category/:categoryName\" element={<CategoryPage />} />\r\n        </Routes>\r\n      </div>\r\n\r\n      {isPopupOpen && (\r\n        <Popup isOpen={isPopupOpen}\r\n        onClose={handleClosePopup}\r\n        onLogin={handleLogin}\r\n        onRegister={handleRegister}/>\r\n      )}\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}, 1000);\r\n};\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}